===============
Lista de Provas
===============

  ----------
  cria lista
  ----------
    $_['lista'] = new ListaDeProvas()
  
  --------------------
  inicia na pagina "1"
  --------------------
    -- cria lista
    expect($_['lista']->paginacao->pagina_atual)->toBeEquals($_args[0])
      
  --------------------------------------------------------
  monta url com os parâmetros corretos, inclusive a página
  --------------------------------------------------------
    -- cria lista
    $_['lista']->filtro->ano = '2012';
    $_['lista']->filtro->instituicao = 'CESPE';
    $_['lista']->filtro->orgao = 'TCU';
    expect($_['lista']->url())->toBe('/provas?page=1&ano=2012&instituicao=CESPE&orgao=TCU');

  ---------------------------------------------------
  não adiciona prova com mesmo id de uma já existente
  ---------------------------------------------------
    $prova1 = new Prova(array('_id'=>1, 'instituicao'=>'Cespe'));
    $prova2 = new Prova(array('_id'=>2, 'instituicao'=>'Cespeasdf'));
    $prova3 = new Prova(array('_id'=>1, 'instituicao'=>'Cespewer'));
    
    $lista = new ProvaList($prova1,$prova2)
    $lista->add($prova3)
    expect( $lista->length() ).toBe(2)
    expect( $lista[0] ).toBe($prova1)
    expect( $lista[1] ).toBe($prova2)

  =========
  paginação
  =========

    ================================
    com 3 itens e um item por página
    ================================
      $lista->paginacao->itens_por_pagina = 1
      $lista->paginacao->total = 3
      
      --------------------------------------------------------------------
      se tiver na página um não deve ter anterior e a próxima deve ser a 2
      --------------------------------------------------------------------
        $lista.pagination.page = 1
        info = @prova_list.page_info()
        (expect info.prev).toBe false
        (expect info.next).toBe 2
      
      --------------------------------------------------------------
      se tiver na 3 não deve ter posterior e a anterior deve ser a 2
      --------------------------------------------------------------
        $lista.pagination.page = 3
        info = @prova_list.page_info() 
        (expect info.prev).toBe 2
        (expect info.next).toBe false

      -----------------------------------------
      se tiver na 2 deve ter anterior e próxima
      -----------------------------------------
        $lista.pagination.page = 2
        info = @prova_list.page_info() 
        (expect info.prev).toBe 1
        (expect info.next).toBe 3
         
    



